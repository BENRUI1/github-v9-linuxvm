
CREATE TABLE TBRC_HEADERS
(
  TBRC_ID               NUMBER(15)              NOT NULL,
  TBXM_ID               NUMBER(15),
  CLAIM_ID              NUMBER(12),
  RECEIVE_DAT           DATE,
  SEND_DAT              DATE,
  FLOW_TYPE_NUM         NUMBER(2),
  DIRECTION_IND         VARCHAR2(3 CHAR),
  STATUS_IND            VARCHAR2(3 CHAR),
  SCORE_ID              VARCHAR2(30 CHAR),
  SCORE_HDL_NAME        VARCHAR2(105 CHAR),
  SCORE_HDL_PH_TEXT     VARCHAR2(45 CHAR),
  SCORE_HDL_EMAIL_TEXT  VARCHAR2(120 CHAR),
  SCORE_HDL_CAT_TEXT    VARCHAR2(105 CHAR),
  ERROR_CODE            NUMBER,
  ERROR_MESSAGE_TEXT    VARCHAR2(2000 CHAR),
  FAILED_TBRC_ID        NUMBER(15),
  TBXM_FEEDBACK_IND     VARCHAR2(3 CHAR),
  HANDLING_COMPANY_CRX  VARCHAR2(45 CHAR),
  SCORE_HDL_REFERENCE   VARCHAR2(24 CHAR),
  SCORE_CA_ID           VARCHAR2(30 CHAR)
)
TABLESPACE DATA
;

CREATE UNIQUE INDEX RCHDS_UK ON TBRC_HEADERS
(TBRC_ID)
LOGGING
TABLESPACE DATA
;

ALTER TABLE TBRC_HEADERS ADD (
 CONSTRAINT RCHDS_PK
  PRIMARY KEY (TBRC_ID)
);



ALTER TABLE TBRC_HEADERS ADD (
  CONSTRAINT RCHDS_CK1
  CHECK (Flow_Type_Num in (0,1,2,3,4,5,6,7,8,9,10,11,12))
  ENABLE VALIDATE
);

ALTER TABLE TBRC_HEADERS ADD (
  CONSTRAINT RCHDS_CK2
  CHECK (direction_Ind in ('I','O'))
  ENABLE VALIDATE
);

--alter table tbrc_headers drop constraint RCHDS_CK3;

ALTER TABLE TBRC_HEADERS ADD (
  CONSTRAINT RCHDS_CK3
  CHECK (status_Ind in ('T','S','W','C','D', 'E', 'X'))
  ENABLE VALIDATE
);


CREATE INDEX TBRC_HEAD_CLAIM_IDX ON TBRC_HEADERS
(CLAIM_ID)
TABLESPACE DATA
;

CREATE OR REPLACE TRIGGER TBRC_HEADERS_BUR
BEFORE UPDATE
ON TBRC_HEADERS REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
begin
if updating then
    if :new.status_ind = 'W' and :old.status_ind <> 'W' 
    and :new.claim_id = 0 and :new.flow_type_num = 2 then 
      :new.status_ind := 'X';
      :new.error_code := null;
    end if;
    if :new.status_ind = 'W' and :old.status_ind <> 'W' and :new.flow_type_num = 8 and :new.error_message_text like 'ORA-20003: ORA-01400: cannot insert NULL into ("ORABUP0"."TBXM_CLAIMS_INTERFACES"."LDC_ORNNN_ID")%' then 
      :new.status_ind := 'X';
      :new.error_code := null;
    end if;
    if :new.status_ind = 'W' and :old.status_ind <> 'W' and :new.flow_type_num = 2 
    and :new.error_message_text like 'maj_int - cannot find intervenants - nf%' then 
      :new.status_ind := 'X';
      :new.error_code := null;
    end if;
end if;
end;
/

GRANT all ON TBRC_HEADERS to public;

CREATE SEQUENCE SQRCHDS_TBRC_ID
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  NOCACHE
  ORDER
  NOKEEP
  NOSCALE
  GLOBAL;


GRANT all ON SQRCHDS_TBRC_ID TO public;

CREATE TABLE TBRC_ARCH_HEADERS
(
  TBRC_ID               NUMBER(15)              NOT NULL,
  TBXM_ID               NUMBER(15),
  CLAIM_ID              NUMBER(12),
  RECEIVE_DAT           DATE,
  SEND_DAT              DATE,
  FLOW_TYPE_NUM         NUMBER(2),
  DIRECTION_IND         VARCHAR2(1 CHAR),
  STATUS_IND            VARCHAR2(1 CHAR),
  SCORE_ID              VARCHAR2(10 CHAR),
  SCORE_HDL_NAME        VARCHAR2(35 CHAR),
  SCORE_HDL_PH_TEXT     VARCHAR2(15 CHAR),
  SCORE_HDL_EMAIL_TEXT  VARCHAR2(40 CHAR),
  SCORE_HDL_CAT_TEXT    VARCHAR2(35 CHAR),
  ERROR_CODE            NUMBER,
  ERROR_MESSAGE_TEXT    VARCHAR2(2000 CHAR),
  FAILED_TBRC_ID        NUMBER(15),
  TBXM_FEEDBACK_IND     VARCHAR2(1 CHAR),
  HANDLING_COMPANY_CRX  VARCHAR2(15 CHAR),
  SCORE_HDL_REFERENCE   VARCHAR2(8 CHAR)
)
TABLESPACE DATA
;

CREATE INDEX TBRC_ARCH_HEAD_IDX ON TBRC_ARCH_HEADERS
(CLAIM_ID)
LOGGING
TABLESPACE DATA;

GRANT ALL ON TBRC_ARCH_HEADERS TO public;

CREATE TABLE TBRC_OBSERVATIONS
(
  TBRC_ID         NUMBER(15)                    NOT NULL,
  OBS_TYPE_CODE   VARCHAR2(15 CHAR)             NOT NULL,
  PART_ID         VARCHAR2(105 CHAR),
  PART_STAT_CODE  VARCHAR2(60 CHAR),
  OBS_DAT         DATE                          NOT NULL,
  OBS_REF_NUM     NUMBER(8),
  OBS_TEXT        VARCHAR2(4000 CHAR),
  AMOUNT          NUMBER,
  CURRENCY        VARCHAR2(9 CHAR)
)
TABLESPACE DATA;


CREATE INDEX TBRC_OBSERVATIONS_TBRC_IDX ON TBRC_OBSERVATIONS
(TBRC_ID)
LOGGING
TABLESPACE DATA
;

ALTER TABLE TBRC_OBSERVATIONS ADD (
  CONSTRAINT RCOBS_FK 
  FOREIGN KEY (TBRC_ID) 
  REFERENCES TBRC_HEADERS(TBRC_ID)
);


CREATE TABLE TBRC_COLLECTIONS
(
  TBRC_ID                    NUMBER(15)         NOT NULL,
  CLAIM_HDL_NAME             VARCHAR2(105 CHAR) NOT NULL,
  INDEMN_CALC_MODE_CODE      VARCHAR2(6 CHAR),
  INDEMN_PCT                 NUMBER(10,7),
  COVERAGE_TYPE_CODE         VARCHAR2(9 CHAR),
  INDEMN_AMT                 NUMBER,
  INDEMN_CURR_CODE           VARCHAR2(9 CHAR)   NOT NULL,
  INDEMN_DAT                 DATE,
  COVERAGE_AMT               NUMBER,
  COVERAGE_RATE_INTRO_PCT    NUMBER,
  FILE_RECEPTION_DAT         DATE               NOT NULL,
  CLAIM_TYPE_CODE            VARCHAR2(6 CHAR)   NOT NULL,
  DEBT_CURR_CODE             VARCHAR2(9 CHAR)   NOT NULL,
  POL_NBR_NUM                VARCHAR2(18 CHAR)  NOT NULL,
  POL_TYPE_CODE              VARCHAR2(60 CHAR)  NOT NULL,
  POL_SUB_TYPE_CODE          VARCHAR2(12 CHAR),
  POL_SUB_TYPE_WORDING_TEXT  VARCHAR2(60 CHAR),
  POL_CURR_CODE              VARCHAR2(9 CHAR)   NOT NULL,
  POL_COUNTRY_CODE           VARCHAR2(9 CHAR)   NOT NULL,
  RECO_TYPE_CODE             VARCHAR2(9 CHAR)   NOT NULL,
  CLAIM_CREAT_TYPE_CODE      VARCHAR2(3 CHAR)   NOT NULL,
  DISP_CODE_IND              VARCHAR2(3 CHAR)   NOT NULL,
  DISP_CAUSE_TEXT            VARCHAR2(750 CHAR),
  CARRIERID                  NUMBER(8),
  CARRIERNAME                VARCHAR2(105 CHAR),
  CASEHANDLER_TELNO          VARCHAR2(75 CHAR),
  LEGACYPOLICYID             VARCHAR2(75 CHAR),
  CLAIM_UNIT                 NUMBER,
  SCORECARRIERID             VARCHAR2(30 CHAR),
  CASE_HANDLING_IND          VARCHAR2(3 CHAR),
  VAT_COVERAGE               VARCHAR2(9 CHAR),
  ASSESSMENT_TYP             NUMBER(3),
  CASE_FREQUENCY_IND         VARCHAR2(3 CHAR),
  CUST_SHARE_AMT             NUMBER(23,8),
  GN_SHARE_AMT               NUMBER(23,8),
  SERVANET_ENTERED_FLAG      VARCHAR2(3 CHAR),
  CURRENTCARRIERID           NUMBER(8),
  CURRENTCARRIERNAME         VARCHAR2(50 CHAR)
)
TABLESPACE DATA
;

COMMENT ON COLUMN TBRC_COLLECTIONS.CASE_HANDLING_IND IS 'Tarification for the recovery fee invoicing';

COMMENT ON COLUMN TBRC_COLLECTIONS.ASSESSMENT_TYP IS 'Assessment type for Indemnification piece';

COMMENT ON COLUMN TBRC_COLLECTIONS.CASE_FREQUENCY_IND IS 'Frequency for the recovery fee invoicing';

COMMENT ON COLUMN TBRC_COLLECTIONS.CUST_SHARE_AMT IS 'Costs charged to the customer depending on covered/uncovered part';

COMMENT ON COLUMN TBRC_COLLECTIONS.GN_SHARE_AMT IS 'Costs charged to Atradius depending on covered/uncovered part';


CREATE UNIQUE INDEX RCCLS_PK ON TBRC_COLLECTIONS
(TBRC_ID, CLAIM_HDL_NAME)
LOGGING
TABLESPACE DATA
;

ALTER TABLE TBRC_COLLECTIONS ADD (
  CONSTRAINT RCCLS_CK1
  CHECK (Indemn_Calc_Mode_Code in ('+S','FF'))
  ENABLE VALIDATE
,  CONSTRAINT RCCLS_CK2
  CHECK (Coverage_Type_Code in ('DEA','CVT','CXC','CVP'))
  ENABLE VALIDATE
,  CONSTRAINT RCCLS_CK3
  CHECK (Disp_Code_Ind in ('Y','N'))
  ENABLE VALIDATE
,  CONSTRAINT RCCLS_CK4
  CHECK (case_handling_ind in ('1', '2', '3', '6', '7', '8'))
  ENABLE VALIDATE
,  CONSTRAINT RCCLS_PK
  PRIMARY KEY
  (TBRC_ID, CLAIM_HDL_NAME)
  USING INDEX RCCLS_PK
  ENABLE VALIDATE);


CREATE TABLE TBRC_RECOVERIES_OUT
(
  TBRC_ID                 NUMBER                NOT NULL,
  RECEIPT_ID              NUMBER                NOT NULL,
  NCM_BUYER_ID            NUMBER                NOT NULL,
  GERL_BUYER_ID           VARCHAR2(105 CHAR),
  BUYER_PAID_AMT          NUMBER                NOT NULL,
  BUYER_PAID_CURR_CODE    VARCHAR2(9 CHAR)      NOT NULL,
  BUYER_PAID_TO_POL_EXCH  NUMBER(30,15)         NOT NULL,
  RECEIVE_DATE            DATE                  NOT NULL,
  PAYM_TYPE_CODE          VARCHAR2(9 CHAR)      NOT NULL,
  EXTERNAL_REF_TEXT       VARCHAR2(105 CHAR),
  CANCEL_FLAG             VARCHAR2(3 CHAR),
  SCOREREF                VARCHAR2(20 CHAR)
)
TABLESPACE DATA;

CREATE INDEX TBRC_RECOVERIES_OUT_TBRC_IDX ON TBRC_RECOVERIES_OUT
(TBRC_ID)
TABLESPACE DATA
;

ALTER TABLE TBRC_RECOVERIES_OUT ADD (
  CONSTRAINT RCRCT_FK 
  FOREIGN KEY (TBRC_ID) 
  REFERENCES TBRC_HEADERS (TBRC_ID)
  ON DELETE CASCADE
  ENABLE VALIDATE);
